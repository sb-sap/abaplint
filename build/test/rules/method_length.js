"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const method_length_1 = require("../../src/rules/method_length");
const _utils_1 = require("./_utils");
const tests = [
    { abap: "parser error", cnt: 0 },
    { abap: "WRITE: / 'abc'.", cnt: 0 },
    { abap: "METHOD foobar. ENDMETHOD.", cnt: 0 },
    { abap: "METHOD foobar. WRITE foo. ENDMETHOD.", cnt: 0 },
    { abap: "METHOD foobar.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "WRITE foo.\n" +
            "ENDMETHOD.", cnt: 1 },
];
_utils_1.testRule(tests, method_length_1.MethodLength);
